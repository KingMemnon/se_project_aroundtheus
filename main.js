!function(){"use strict";const e={formSelector:"modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},t=document.querySelector("#edit-profile-modal"),s=document.querySelector("#profile-edit-button"),r=(document.querySelector("#profile-edit-modal"),document.querySelector("#profile-title-js"),document.querySelector("#profile-description-js"),document.querySelector("#profile-name")),i=document.querySelector("#profile-description"),n=(document.querySelector("#avatar-modal"),document.querySelector("#avatar-form")),o=(document.querySelector("#avatar-url"),document.querySelector("#change-avatar-image")),a=document.querySelector("#profile-add-button"),l=document.querySelector("#add-image-modal").querySelector(".modal__image-card"),d=(document.querySelector(".cards__list"),document.querySelector("#remove-card-modal"),document.querySelector("#remove-card-form"));document.querySelector("#preview-image-modal");class c{constructor(e,t,s,r,i){let{name:n,link:o,_id:a,isLiked:l}=e;this.id=a,this.isLiked=l,this._name=n,this._link=o,this._cardSelector=t,this._handleImageClick=s,this._handleCardDelete=r,this._handleLikeClick=i,console.log("name",n),console.log("link",o),this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardElement.dataset.id=this._id,this._cardTitleEl=this._cardElement.querySelector(".card__title"),this._cardImageEl=this._cardElement.querySelector(".card__image"),this._likeButtonEl=this._cardElement.querySelector(".card__like-button"),this._deleteButtonEl=this._cardElement.querySelector(".card__delete-button"),this._cardTitleEl.textContent=this._name,this._cardImageEl.src=this._link,this._cardImageEl.alt=`Image of ${this._name}`,this._setEventListeners(),this._handleLikeIcon()}_setEventListeners(){this._likeButtonEl.addEventListener("click",(()=>{this._handleLikeClick(this)})),this._deleteButtonEl.addEventListener("click",(()=>{this._handleCardDelete(this)})),this._cardImageEl.addEventListener("click",(()=>{console.log("this._name",this._name),console.log("this._link",this._link),this._handleImageClick(this._name,this._link)}))}deleteCard(){this._cardElement.remove(),this._cardElement=null}updateLikes(e){this.isLiked=e,this._handleLikeIcon()}_handleLikeIcon(){this.isLiked?this._likeButtonEl.classList.add("card__like-button_active"):this._likeButtonEl.classList.remove("card__like-button_active")}getView(){return this._cardElement}}class u{constructor(e,t){this._formElement=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._inputElements=Array.from(t.querySelectorAll(this._inputSelector)),this._submitButton=t.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return this._inputElements.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_setEventListeners(){this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._setEventListeners()}resetValidation(){this._inputElements.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState(),this._formElement.reset()}}class h{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>this._renderer(e)))}addItem(e){this._container.prepend(e)}}class _{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._closeButton=this._popupElement.querySelector(".modal__close"),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._closeButton.addEventListener("click",(()=>this.close())),this._popupElement.addEventListener("click",(e=>{e.target.classList.contains("modal_opened")&&this.close()}))}}class m extends _{constructor(e,t){super({popupSelector:e}),this._modalForm=this._popupElement.querySelector(".modal__form"),this._submitButton=this._modalForm.querySelector(".modal__button"),this._submitButtonText=this._submitButton.textContent,this._handleFormSubmit=t}_getInputValues(){const e={};return this._modalForm.querySelectorAll(".modal__input").forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._modalForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this.close()}))}close(){this._modalForm.reset(),super.close()}setSubmitAction(e){this._handleFormSubmit=e}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitButton.textContent=e?t:this._submitButtonText}}new u(e,t).enableValidation();const p=new u(e,l);p.enableValidation();const E=new u(e,n);E.enableValidation(),new u(e,d).enableValidation();const v=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>{if(e.ok)return e.json()}))}addCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then((e=>{if(e.ok)return e.json()}))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>{if(e.ok)return e.json()}))}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then((e=>{if(e.ok)return e.json()}))}setUserInfo(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then((e=>{if(e.ok)return e.json()}))}setUserAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}updateAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((e=>{if(e.ok)return e.json()}))}setCardLikes(e,t){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers}).then((e=>{if(e.ok)return e.json()}))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"eeca6a67-c0e1-4af7-ac48-d61d2e5d5520","Content-Type":"application/json"}});let S;v.getInitialCards().then((e=>{S=new h({items:e,renderer:e=>{const t=b(e);S.addItem(t)}},".cards__list"),S.renderItems()}));const f=new class{constructor(e){let{userName:t,userAbout:s,userAvatar:r}=e;this._userNameElement=document.querySelector(t),this._userAboutElement=document.querySelector(s),this._avatarElement=document.querySelector(r)}getUserInfo(){return{name:this._userNameElement.textContent,about:this._userAboutElement.textContent,avatar:this._avatarElement.src}}setUserInfo(e){let{name:t,about:s,avatar:r}=e;this._userNameElement.textContent=t,this._userAboutElement.textContent=s,this._avatarElement.src=r}}({userName:"#profile-title-js",userAbout:"#profile-description-js",userAvatar:".profile__image"});function b(e){return new c(e,"#card-template",q,y,B).getView()}v.getUserInfo().then((e=>{f.setUserInfo(e)}));const g=new m("#profile-edit-modal",(e=>{g.renderLoading(!0),v.setUserInfo(e).then((e=>{f.setUserInfo(e),g.renderLoading(!1),g.close()}))})),L=new m("#add-image-modal",(e=>{L.renderLoading(!0),v.addCard(e).then((e=>{const t=b(e);S.addItem(t),L.close(),L.renderLoading(!1)}))})),k=new m("#remove-card-modal");function y(e){k.open(),k.setSubmitAction((()=>{k.renderLoading(!0),v.deleteCard(e.id).then((()=>{e.deleteCard(),k.close()}))}))}k.setEventListeners();const C=new m("#avatar-modal",(e=>{const t=e["avatar-form"];C.renderLoading(!0),v.setUserAvatar(t).then((e=>{f.setUserInfo({avatar:e.avatar}),C.renderLoading(!1),C.close()})).catch((e=>{console.log(e)}))})),I=new class extends _{constructor(e){super({popupSelector:e}),this._image=this._popupElement.querySelector(".modal__card-image"),this._imageText=this._popupElement.querySelector(".modal__image-text")}open(e){let{name:t,link:s}=e;this._image.src=s,this._image.alt=`Photo of ${t}`,this._imageText.textContent=t,super.open()}}("#preview-image-modal");function q(e,t){I.open({name:e,link:t})}function B(e){v.setCardLikes(e.id,e.isLiked).then((t=>{e.updateLikes(t.isLiked)}))}s.addEventListener("click",(()=>{const e=f.getUserInfo();r.value=e.name,i.value=e.about,g.open()})),L.setEventListeners(),a.addEventListener("click",(()=>{p.resetValidation(),L.open()})),o.addEventListener("click",(()=>{E.resetValidation(),C.open()})),I.setEventListeners(),g.setEventListeners(),C.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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T0FBTzNJLElBQU10QixFQUNsQkcsS0FBSzhKLE9BQU8xSSxJQUFPLFlBQVd4QixJQUM5QkksS0FBSytKLFdBQVc3SSxZQUFjdEIsRUFFOUIyRixNQUFNVixNQUNSLEdIdUhvQyx3QkFFdEMsU0FBU3BGLEVBQWlCRyxFQUFNQyxHQUM5QmdLLEVBQVdoRixLQUFLLENBQUVqRixPQUFNQyxRQUMxQixDQUVBLFNBQVNGLEVBQWdCNkosR0FDdkIvQyxFQUFJNEIsYUFBYW1CLEVBQUt2SixHQUFJdUosRUFBS3pKLFNBQVNpSCxNQUFNZ0QsSUFDNUNSLEVBQUs5SCxZQUFZc0ksRUFBWWpLLFFBQVEsR0FFekMsQ0FNQWxCLEVBQWtCMEMsaUJBQWlCLFNBQVMsS0FDMUMsTUFBTTBJLEVBQWtCdEIsRUFBU2hCLGNBQ2pDN0ksRUFBa0JnSCxNQUFRbUUsRUFBZ0JySyxLQUMxQ2IsRUFBd0IrRyxNQUFRbUUsRUFBZ0JmLE1BQ2hERyxFQUFpQnhFLE1BQU0sSUFHekJ5RSxFQUFhcEUsb0JBRWJoRyxFQUFpQnFDLGlCQUFpQixTQUFTLEtBQ3pDZ0YsRUFBaUI5QyxrQkFDakI2RixFQUFhekUsTUFBTSxJQUdyQjVGLEVBQXdCc0MsaUJBQWlCLFNBQVMsS0FDaERpRixFQUFvQi9DLGtCQUNwQmdHLEVBQWlCNUUsTUFBTSxJQUd6QmdGLEVBQVczRSxvQkFDWG1FLEVBQWlCbkUsb0JBQ2pCdUUsRUFBaUJ2RSxtQiIsInNvdXJjZXMiOlsid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvcGFnZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvQXBpLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBjb25maWcgPSB7XG4gIGZvcm1TZWxlY3RvcjogXCJtb2RhbF9fZm9ybVwiLFxuICBpbnB1dFNlbGVjdG9yOiBcIi5tb2RhbF9faW5wdXRcIixcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLm1vZGFsX19idXR0b25cIixcbiAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJwb3B1cF9fYnV0dG9uX2Rpc2FibGVkXCIsXG4gIGlucHV0RXJyb3JDbGFzczogXCJwb3B1cF9faW5wdXRfdHlwZV9lcnJvclwiLFxuICBlcnJvckNsYXNzOiBcInBvcHVwX19lcnJvcl92aXNpYmxlXCIsXG59O1xuXG5leHBvcnQgY29uc3QgY2FyZFNlbGVjdG9yID0gXCIjY2FyZC10ZW1wbGF0ZVwiO1xuZXhwb3J0IGNvbnN0IGVkaXRQcm9maWxlRm9ybUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxuICBcIiNlZGl0LXByb2ZpbGUtbW9kYWxcIlxuKTtcbi8qKj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEVMRU1FTlRcbiAqPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09KiovXG5leHBvcnQgY29uc3QgcHJvZmlsZUVkaXRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtZWRpdC1idXR0b25cIik7XG5leHBvcnQgY29uc3QgcHJvZmlsZUVkaXRNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS1lZGl0LW1vZGFsXCIpO1xuXG5leHBvcnQgY29uc3QgcHJvZmlsZVRpdGxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLXRpdGxlLWpzXCIpO1xuZXhwb3J0IGNvbnN0IHByb2ZpbGVEZXNjcmlwdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gIFwiI3Byb2ZpbGUtZGVzY3JpcHRpb24tanNcIlxuKTtcbmV4cG9ydCBjb25zdCBwcm9maWxlVGl0bGVJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS1uYW1lXCIpO1xuZXhwb3J0IGNvbnN0IHByb2ZpbGVEZXNjcmlwdGlvbklucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgXCIjcHJvZmlsZS1kZXNjcmlwdGlvblwiXG4pO1xuZXhwb3J0IGNvbnN0IGF2YXRhck1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhdmF0YXItbW9kYWxcIik7XG5leHBvcnQgY29uc3QgYXZhdGFyRm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYXZhdGFyLWZvcm1cIik7XG5leHBvcnQgY29uc3QgYXZhdGFyVXJsSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2F2YXRhci11cmxcIik7XG5leHBvcnQgY29uc3QgY2hhbmdlQXZhdGFySW1hZ2VCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxuICBcIiNjaGFuZ2UtYXZhdGFyLWltYWdlXCJcbik7XG4vKj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IEFkZCBOZXcgQ2FyZCA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qL1xuZXhwb3J0IGNvbnN0IHByb2ZpbGVBZGRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtYWRkLWJ1dHRvblwiKTtcbmV4cG9ydCBjb25zdCBhZGROZXdDYXJkSW1hZ2VNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYWRkLWltYWdlLW1vZGFsXCIpO1xuXG5leHBvcnQgY29uc3QgbmV3Q2FyZEVkaXRGb3JtID1cbiAgYWRkTmV3Q2FyZEltYWdlTW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9faW1hZ2UtY2FyZFwiKTtcblxuZXhwb3J0IGNvbnN0IGNhcmRMaXN0RWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRzX19saXN0XCIpO1xuXG4vKjwhLS09PT09PT09PT09PT09PT09PSBSZW1vdmUgQ2FyZCBNb2RhbCA9PT09PT09PT09PT09PT09LS0+Ki9cblxuZXhwb3J0IGNvbnN0IHJlbW92ZUNhcmRNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcmVtb3ZlLWNhcmQtbW9kYWxcIik7XG5leHBvcnQgY29uc3QgcmVtb3ZlQ2FyZEZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3JlbW92ZS1jYXJkLWZvcm1cIik7XG5cbi8qKj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogICAgICAgICAgICAgICAgICAgICAgICAgICBJbWFnZSBQb3B1cFxuICo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0qKi9cbmV4cG9ydCBjb25zdCBpbWFnZVBvcHVwTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3ByZXZpZXctaW1hZ2UtbW9kYWxcIik7XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBDYXJkIHtcbiAgY29uc3RydWN0b3IoXG4gICAgeyBuYW1lLCBsaW5rLCBfaWQsIGlzTGlrZWQgfSxcbiAgICBjYXJkU2VsZWN0b3IsXG4gICAgaGFuZGxlSW1hZ2VDbGljayxcbiAgICBoYW5kbGVDYXJkRGVsZXRlLFxuICAgIGhhbmRsZUxpa2VDbGlja1xuICApIHtcbiAgICB0aGlzLmlkID0gX2lkO1xuICAgIHRoaXMuaXNMaWtlZCA9IGlzTGlrZWQ7XG4gICAgdGhpcy5fbmFtZSA9IG5hbWU7XG4gICAgdGhpcy5fbGluayA9IGxpbms7XG4gICAgdGhpcy5fY2FyZFNlbGVjdG9yID0gY2FyZFNlbGVjdG9yO1xuICAgIHRoaXMuX2hhbmRsZUltYWdlQ2xpY2sgPSBoYW5kbGVJbWFnZUNsaWNrO1xuICAgIHRoaXMuX2hhbmRsZUNhcmREZWxldGUgPSBoYW5kbGVDYXJkRGVsZXRlO1xuICAgIHRoaXMuX2hhbmRsZUxpa2VDbGljayA9IGhhbmRsZUxpa2VDbGljaztcblxuICAgIGNvbnNvbGUubG9nKFwibmFtZVwiLCBuYW1lKTtcbiAgICBjb25zb2xlLmxvZyhcImxpbmtcIiwgbGluayk7XG5cbiAgICB0aGlzLl9jYXJkRWxlbWVudCA9IGRvY3VtZW50XG4gICAgICAucXVlcnlTZWxlY3Rvcih0aGlzLl9jYXJkU2VsZWN0b3IpXG4gICAgICAuY29udGVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRcIilcbiAgICAgIC5jbG9uZU5vZGUodHJ1ZSk7XG5cbiAgICB0aGlzLl9jYXJkRWxlbWVudC5kYXRhc2V0LmlkID0gdGhpcy5faWQ7XG4gICAgdGhpcy5fY2FyZFRpdGxlRWwgPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX3RpdGxlXCIpO1xuICAgIHRoaXMuX2NhcmRJbWFnZUVsID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19pbWFnZVwiKTtcbiAgICB0aGlzLl9saWtlQnV0dG9uRWwgPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xpa2UtYnV0dG9uXCIpO1xuICAgIHRoaXMuX2RlbGV0ZUJ1dHRvbkVsID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgIFwiLmNhcmRfX2RlbGV0ZS1idXR0b25cIlxuICAgICk7XG4gICAgdGhpcy5fY2FyZFRpdGxlRWwudGV4dENvbnRlbnQgPSB0aGlzLl9uYW1lO1xuICAgIHRoaXMuX2NhcmRJbWFnZUVsLnNyYyA9IHRoaXMuX2xpbms7XG4gICAgdGhpcy5fY2FyZEltYWdlRWwuYWx0ID0gYEltYWdlIG9mICR7dGhpcy5fbmFtZX1gO1xuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgdGhpcy5faGFuZGxlTGlrZUljb24oKTtcbiAgfVxuXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9saWtlQnV0dG9uRWwuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIHRoaXMuX2hhbmRsZUxpa2VDbGljayh0aGlzKTtcbiAgICB9KTtcblxuICAgIHRoaXMuX2RlbGV0ZUJ1dHRvbkVsLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICB0aGlzLl9oYW5kbGVDYXJkRGVsZXRlKHRoaXMpO1xuICAgIH0pO1xuXG4gICAgdGhpcy5fY2FyZEltYWdlRWwuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKFwidGhpcy5fbmFtZVwiLCB0aGlzLl9uYW1lKTtcbiAgICAgIGNvbnNvbGUubG9nKFwidGhpcy5fbGlua1wiLCB0aGlzLl9saW5rKTtcbiAgICAgIHRoaXMuX2hhbmRsZUltYWdlQ2xpY2sodGhpcy5fbmFtZSwgdGhpcy5fbGluayk7XG4gICAgfSk7XG4gIH1cblxuICBkZWxldGVDYXJkKCkge1xuICAgIHRoaXMuX2NhcmRFbGVtZW50LnJlbW92ZSgpO1xuICAgIHRoaXMuX2NhcmRFbGVtZW50ID0gbnVsbDtcbiAgfVxuXG4gIHVwZGF0ZUxpa2VzKGlzTGlrZWQpIHtcbiAgICB0aGlzLmlzTGlrZWQgPSBpc0xpa2VkO1xuICAgIHRoaXMuX2hhbmRsZUxpa2VJY29uKCk7XG4gIH1cblxuICBfaGFuZGxlTGlrZUljb24oKSB7XG4gICAgaWYgKHRoaXMuaXNMaWtlZCkge1xuICAgICAgdGhpcy5fbGlrZUJ1dHRvbkVsLmNsYXNzTGlzdC5hZGQoXCJjYXJkX19saWtlLWJ1dHRvbl9hY3RpdmVcIik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2xpa2VCdXR0b25FbC5jbGFzc0xpc3QucmVtb3ZlKFwiY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlXCIpO1xuICAgIH1cbiAgfVxuXG4gIGdldFZpZXcoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2NhcmRFbGVtZW50O1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JtVmFsaWRhdG9yIHtcbiAgY29uc3RydWN0b3IoY29uZmlnLCBmb3JtRWxlbWVudCkge1xuICAgIHRoaXMuX2Zvcm1FbGVtZW50ID0gZm9ybUVsZW1lbnQ7XG4gICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IGNvbmZpZy5pbnB1dFNlbGVjdG9yO1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yID0gY29uZmlnLnN1Ym1pdEJ1dHRvblNlbGVjdG9yO1xuICAgIHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MgPSBjb25maWcuaW5hY3RpdmVCdXR0b25DbGFzcztcbiAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSBjb25maWcuaW5wdXRFcnJvckNsYXNzO1xuICAgIHRoaXMuX2Vycm9yQ2xhc3MgPSBjb25maWcuZXJyb3JDbGFzcztcbiAgICB0aGlzLl9pbnB1dEVsZW1lbnRzID0gQXJyYXkuZnJvbShcbiAgICAgIGZvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5faW5wdXRTZWxlY3RvcilcbiAgICApO1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbiA9IGZvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xuICB9XG4gIC8vdGVzdGluZ1xuICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XG4gICAgY29uc3QgZXJyb3JNZXNzYWdlRWwgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgXG4gICAgKTtcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xuICAgIGVycm9yTWVzc2FnZUVsLnRleHRDb250ZW50ID0gaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlO1xuICAgIGVycm9yTWVzc2FnZUVsLmNsYXNzTGlzdC5hZGQodGhpcy5fZXJyb3JDbGFzcyk7XG4gIH1cblxuICBfaGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XG4gICAgY29uc3QgZXJyb3JNZXNzYWdlRWwgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgXG4gICAgKTtcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xuICAgIGVycm9yTWVzc2FnZUVsLnRleHRDb250ZW50ID0gXCJcIjtcbiAgICBlcnJvck1lc3NhZ2VFbC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2Vycm9yQ2xhc3MpO1xuICB9XG5cbiAgX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpIHtcbiAgICBpZiAoIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCkge1xuICAgICAgdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcbiAgICB9XG4gIH1cblxuICBfaGFzSW52YWxpZElucHV0KCkge1xuICAgIHJldHVybiB0aGlzLl9pbnB1dEVsZW1lbnRzLnNvbWUoXG4gICAgICAoaW5wdXRFbGVtZW50KSA9PiAhaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkXG4gICAgKTtcbiAgfVxuXG4gIF90b2dnbGVCdXR0b25TdGF0ZSgpIHtcbiAgICBpZiAodGhpcy5faGFzSW52YWxpZElucHV0KCkpIHtcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5jbGFzc0xpc3QuYWRkKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uZGlzYWJsZWQgPSBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5faW5wdXRFbGVtZW50cy5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICAgIGlucHV0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4ge1xuICAgICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KTtcbiAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZW5hYmxlVmFsaWRhdGlvbigpIHtcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuICB9XG5cbiAgcmVzZXRWYWxpZGF0aW9uKCkge1xuICAgIHRoaXMuX2lucHV0RWxlbWVudHMuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpO1xuICAgIH0pO1xuICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XG4gICAgdGhpcy5fZm9ybUVsZW1lbnQucmVzZXQoKTtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VjdGlvbiB7XG4gIGNvbnN0cnVjdG9yKHsgaXRlbXMsIHJlbmRlcmVyIH0sIGNvbnRhaW5lclNlbGVjdG9yKSB7XG4gICAgdGhpcy5faXRlbXMgPSBpdGVtcztcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xuICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY29udGFpbmVyU2VsZWN0b3IpO1xuICB9XG4gIHJlbmRlckl0ZW1zKCkge1xuICAgIHRoaXMuX2l0ZW1zLmZvckVhY2goKGl0ZW0pID0+IHRoaXMuX3JlbmRlcmVyKGl0ZW0pKTtcbiAgfVxuICBhZGRJdGVtKGVsZW1lbnQpIHtcbiAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChlbGVtZW50KTtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcih7IHBvcHVwU2VsZWN0b3IgfSkge1xuICAgIHRoaXMuX3BvcHVwRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5fY2xvc2VCdXR0b24gPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fY2xvc2VcIik7XG4gICAgdGhpcy5faGFuZGxlRXNjQ2xvc2UgPSB0aGlzLl9oYW5kbGVFc2NDbG9zZS5iaW5kKHRoaXMpO1xuICB9XG4gIG9wZW4oKSB7XG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJtb2RhbF9vcGVuZWRcIik7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJtb2RhbF9vcGVuZWRcIik7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xuICB9XG4gIF9oYW5kbGVFc2NDbG9zZShldnQpIHtcbiAgICBpZiAoZXZ0LmtleSA9PT0gXCJFc2NhcGVcIikge1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH1cbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX2Nsb3NlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB0aGlzLmNsb3NlKCkpO1xuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2dCkgPT4ge1xuICAgICAgaWYgKGV2dC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwibW9kYWxfb3BlbmVkXCIpKSB7XG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufVxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IsIGhhbmRsZUZvcm1TdWJtaXQpIHtcbiAgICBzdXBlcih7IHBvcHVwU2VsZWN0b3IgfSk7XG4gICAgdGhpcy5fbW9kYWxGb3JtID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1cIik7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uID0gdGhpcy5fbW9kYWxGb3JtLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2J1dHRvblwiKTtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b25UZXh0ID0gdGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50O1xuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xuICB9XG4gIF9nZXRJbnB1dFZhbHVlcygpIHtcbiAgICBjb25zdCBpbnB1dFZhbHVlcyA9IHt9O1xuICAgIHRoaXMuX21vZGFsRm9ybS5xdWVyeVNlbGVjdG9yQWxsKFwiLm1vZGFsX19pbnB1dFwiKS5mb3JFYWNoKChpbnB1dCkgPT4ge1xuICAgICAgaW5wdXRWYWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcbiAgICB9KTtcbiAgICByZXR1cm4gaW5wdXRWYWx1ZXM7XG4gIH1cblxuICBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xuICAgIHRoaXMuX21vZGFsRm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9KTtcbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIHRoaXMuX21vZGFsRm9ybS5yZXNldCgpO1xuICAgIHN1cGVyLmNsb3NlKCk7XG4gIH1cblxuICBzZXRTdWJtaXRBY3Rpb24oaGFuZGxlRm9ybVN1Ym1pdCkge1xuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xuICB9XG5cbiAgcmVuZGVyTG9hZGluZyhpc0xvYWRpbmcsIG1lc3NhZ2UgPSBcIlNhdmluZy4uLlwiKSB7XG4gICAgaWYgKGlzTG9hZGluZykge1xuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gbWVzc2FnZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gdGhpcy5fc3VibWl0QnV0dG9uVGV4dDtcbiAgICB9XG4gIH1cbn1cbiIsImltcG9ydCB7XG4gIGNvbmZpZyxcbiAgY2FyZFNlbGVjdG9yLFxuICBlZGl0UHJvZmlsZUZvcm1FbGVtZW50LFxuICBwcm9maWxlRWRpdEJ1dHRvbixcbiAgcHJvZmlsZVRpdGxlSW5wdXQsXG4gIHByb2ZpbGVEZXNjcmlwdGlvbklucHV0LFxuICBwcm9maWxlQWRkQnV0dG9uLFxuICBuZXdDYXJkRWRpdEZvcm0sXG4gIGF2YXRhckZvcm0sXG4gIGNoYW5nZUF2YXRhckltYWdlQnV0dG9uLFxuICByZW1vdmVDYXJkRm9ybSxcbn0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YW50cy5qc1wiO1xuaW1wb3J0IENhcmQgZnJvbSBcIi4uL2NvbXBvbmVudHMvQ2FyZC5qc1wiO1xuaW1wb3J0IEFwaSBmcm9tIFwiLi4vY29tcG9uZW50cy9BcGkuanNcIjtcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcbmltcG9ydCBTZWN0aW9uIGZyb20gXCIuLi9jb21wb25lbnRzL1NlY3Rpb24uanNcIjtcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanNcIjtcbmltcG9ydCBcIi4uL3BhZ2VzL2luZGV4LmNzc1wiO1xuaW1wb3J0IFVzZXJJbmZvIGZyb20gXCIuLi9jb21wb25lbnRzL1VzZXJJbmZvLmpzXCI7XG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanNcIjtcblxuY29uc3QgZWRpdFByb2ZpbGVWYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihjb25maWcsIGVkaXRQcm9maWxlRm9ybUVsZW1lbnQpO1xuZWRpdFByb2ZpbGVWYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xuXG5jb25zdCBhZGRDYXJkVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IoY29uZmlnLCBuZXdDYXJkRWRpdEZvcm0pO1xuYWRkQ2FyZFZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG5cbmNvbnN0IGF2YXRhckZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihjb25maWcsIGF2YXRhckZvcm0pO1xuYXZhdGFyRm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG5cbmNvbnN0IHJlbW92ZUNhcmRWYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihjb25maWcsIHJlbW92ZUNhcmRGb3JtKTtcbnJlbW92ZUNhcmRWYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xuXG5jb25zdCBhcGkgPSBuZXcgQXBpKHtcbiAgYmFzZVVybDogXCJodHRwczovL2Fyb3VuZC1hcGkuZW4udHJpcGxldGVuLXNlcnZpY2VzLmNvbS92MVwiLFxuICBoZWFkZXJzOiB7XG4gICAgYXV0aG9yaXphdGlvbjogXCJlZWNhNmE2Ny1jMGUxLTRhZjctYWM0OC1kNjFkMmU1ZDU1MjBcIixcbiAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgfSxcbn0pO1xuXG5sZXQgY2FyZFNlY3Rpb247XG5cbmFwaS5nZXRJbml0aWFsQ2FyZHMoKS50aGVuKChjYXJkcykgPT4ge1xuICBjYXJkU2VjdGlvbiA9IG5ldyBTZWN0aW9uKFxuICAgIHtcbiAgICAgIGl0ZW1zOiBjYXJkcyxcbiAgICAgIHJlbmRlcmVyOiAoY2FyZERhdGEpID0+IHtcbiAgICAgICAgY29uc3QgY2FyZEVsZW1lbnQgPSBnZXRDYXJkRWxlbWVudChjYXJkRGF0YSk7XG4gICAgICAgIGNhcmRTZWN0aW9uLmFkZEl0ZW0oY2FyZEVsZW1lbnQpO1xuICAgICAgfSxcbiAgICB9LFxuICAgIFwiLmNhcmRzX19saXN0XCJcbiAgKTtcbiAgY2FyZFNlY3Rpb24ucmVuZGVySXRlbXMoKTtcbn0pO1xuY29uc3QgdXNlckluZm8gPSBuZXcgVXNlckluZm8oe1xuICB1c2VyTmFtZTogXCIjcHJvZmlsZS10aXRsZS1qc1wiLFxuICB1c2VyQWJvdXQ6IFwiI3Byb2ZpbGUtZGVzY3JpcHRpb24tanNcIixcbiAgdXNlckF2YXRhcjogXCIucHJvZmlsZV9faW1hZ2VcIixcbn0pO1xuYXBpLmdldFVzZXJJbmZvKCkudGhlbigodXNlckRhdGEpID0+IHtcbiAgdXNlckluZm8uc2V0VXNlckluZm8odXNlckRhdGEpO1xufSk7XG5cbi8qKj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEZVTkNUSU9OXG4gKj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSoqL1xuXG5mdW5jdGlvbiBnZXRDYXJkRWxlbWVudChjYXJkRGF0YSkge1xuICBjb25zdCBjYXJkID0gbmV3IENhcmQoXG4gICAgY2FyZERhdGEsXG4gICAgY2FyZFNlbGVjdG9yLFxuICAgIGhhbmRsZUltYWdlQ2xpY2ssXG4gICAgaGFuZGxlQ2FyZERlbGV0ZSxcbiAgICBoYW5kbGVMaWtlQ2xpY2tcbiAgKTtcbiAgcmV0dXJuIGNhcmQuZ2V0VmlldygpO1xufVxuLyoqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRVZFTlQgSEFORExFUlNcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKiovXG5cbmNvbnN0IHByb2ZpbGVFZGl0UG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcbiAgXCIjcHJvZmlsZS1lZGl0LW1vZGFsXCIsXG4gIChmb3JtRGF0YSkgPT4ge1xuICAgIHByb2ZpbGVFZGl0UG9wdXAucmVuZGVyTG9hZGluZyh0cnVlKTtcbiAgICBhcGkuc2V0VXNlckluZm8oZm9ybURhdGEpLnRoZW4oKHVzZXJEYXRhKSA9PiB7XG4gICAgICB1c2VySW5mby5zZXRVc2VySW5mbyh1c2VyRGF0YSk7XG4gICAgICBwcm9maWxlRWRpdFBvcHVwLnJlbmRlckxvYWRpbmcoZmFsc2UpO1xuICAgICAgcHJvZmlsZUVkaXRQb3B1cC5jbG9zZSgpO1xuICAgIH0pO1xuICB9XG4pO1xuXG5jb25zdCBhZGRDYXJkUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcIiNhZGQtaW1hZ2UtbW9kYWxcIiwgKGlucHV0VmFsdWVzKSA9PiB7XG4gIGFkZENhcmRQb3B1cC5yZW5kZXJMb2FkaW5nKHRydWUpO1xuICBhcGkuYWRkQ2FyZChpbnB1dFZhbHVlcykudGhlbigoY2FyZERhdGEpID0+IHtcbiAgICBjb25zdCBjYXJkRWxlbWVudCA9IGdldENhcmRFbGVtZW50KGNhcmREYXRhKTtcbiAgICBjYXJkU2VjdGlvbi5hZGRJdGVtKGNhcmRFbGVtZW50KTtcbiAgICBhZGRDYXJkUG9wdXAuY2xvc2UoKTtcbiAgICBhZGRDYXJkUG9wdXAucmVuZGVyTG9hZGluZyhmYWxzZSk7XG4gIH0pO1xufSk7XG5cbmNvbnN0IGRlbGV0ZUNhcmRNb2RhbCA9IG5ldyBQb3B1cFdpdGhGb3JtKFwiI3JlbW92ZS1jYXJkLW1vZGFsXCIpO1xuZGVsZXRlQ2FyZE1vZGFsLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbmZ1bmN0aW9uIGhhbmRsZUNhcmREZWxldGUoY2FyZCkge1xuICBkZWxldGVDYXJkTW9kYWwub3BlbigpO1xuICBkZWxldGVDYXJkTW9kYWwuc2V0U3VibWl0QWN0aW9uKCgpID0+IHtcbiAgICBkZWxldGVDYXJkTW9kYWwucmVuZGVyTG9hZGluZyh0cnVlKTtcbiAgICBhcGkuZGVsZXRlQ2FyZChjYXJkLmlkKS50aGVuKCgpID0+IHtcbiAgICAgIGNhcmQuZGVsZXRlQ2FyZCgpO1xuICAgICAgZGVsZXRlQ2FyZE1vZGFsLmNsb3NlKCk7XG4gICAgfSk7XG4gIH0pO1xufVxuY29uc3QgYXZhdGFyTW9kYWxQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKFwiI2F2YXRhci1tb2RhbFwiLCAoZm9ybURhdGEpID0+IHtcbiAgY29uc3QgYXZhdGFyVXJsID0gZm9ybURhdGFbXCJhdmF0YXItZm9ybVwiXTtcbiAgYXZhdGFyTW9kYWxQb3B1cC5yZW5kZXJMb2FkaW5nKHRydWUpO1xuICBhcGlcbiAgICAuc2V0VXNlckF2YXRhcihhdmF0YXJVcmwpXG4gICAgLnRoZW4oKHVzZXJEYXRhKSA9PiB7XG4gICAgICB1c2VySW5mby5zZXRVc2VySW5mbyh7IGF2YXRhcjogdXNlckRhdGEuYXZhdGFyIH0pO1xuICAgICAgYXZhdGFyTW9kYWxQb3B1cC5yZW5kZXJMb2FkaW5nKGZhbHNlKTtcbiAgICAgIGF2YXRhck1vZGFsUG9wdXAuY2xvc2UoKTtcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgIH0pO1xufSk7XG5cbmNvbnN0IGltYWdlUG9wdXAgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoXCIjcHJldmlldy1pbWFnZS1tb2RhbFwiKTtcblxuZnVuY3Rpb24gaGFuZGxlSW1hZ2VDbGljayhuYW1lLCBsaW5rKSB7XG4gIGltYWdlUG9wdXAub3Blbih7IG5hbWUsIGxpbmsgfSk7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZUxpa2VDbGljayhjYXJkKSB7XG4gIGFwaS5zZXRDYXJkTGlrZXMoY2FyZC5pZCwgY2FyZC5pc0xpa2VkKS50aGVuKChuZXdDYXJkRGF0YSkgPT4ge1xuICAgIGNhcmQudXBkYXRlTGlrZXMobmV3Q2FyZERhdGEuaXNMaWtlZCk7XG4gIH0pO1xufVxuXG4vKio9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFVkVOVCBMSVNURU5FUlNcbiAqPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09KiovXG5cbnByb2ZpbGVFZGl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIGNvbnN0IGN1cnJlbnRVc2VySW5mbyA9IHVzZXJJbmZvLmdldFVzZXJJbmZvKCk7XG4gIHByb2ZpbGVUaXRsZUlucHV0LnZhbHVlID0gY3VycmVudFVzZXJJbmZvLm5hbWU7XG4gIHByb2ZpbGVEZXNjcmlwdGlvbklucHV0LnZhbHVlID0gY3VycmVudFVzZXJJbmZvLmFib3V0O1xuICBwcm9maWxlRWRpdFBvcHVwLm9wZW4oKTtcbn0pO1xuXG5hZGRDYXJkUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxucHJvZmlsZUFkZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBhZGRDYXJkVmFsaWRhdG9yLnJlc2V0VmFsaWRhdGlvbigpO1xuICBhZGRDYXJkUG9wdXAub3BlbigpO1xufSk7XG5cbmNoYW5nZUF2YXRhckltYWdlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIGF2YXRhckZvcm1WYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCk7XG4gIGF2YXRhck1vZGFsUG9wdXAub3BlbigpO1xufSk7XG5cbmltYWdlUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbnByb2ZpbGVFZGl0UG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbmF2YXRhck1vZGFsUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuLyoqPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqICAgICAgICAgICAgICAgSW5pdGlhbGl6YXRpb25cbiAqPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09KiovXG4iLCJpbXBvcnQgeyBhdmF0YXJNb2RhbCwgYXZhdGFyVXJsSW5wdXQgfSBmcm9tIFwiLi4vdXRpbHMvY29uc3RhbnRzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwaSB7XG4gIGNvbnN0cnVjdG9yKHsgYmFzZVVybCwgaGVhZGVycyB9KSB7XG4gICAgdGhpcy5fYmFzZVVybCA9IGJhc2VVcmw7XG4gICAgdGhpcy5faGVhZGVycyA9IGhlYWRlcnM7XG4gIH1cblxuICBnZXRJbml0aWFsQ2FyZHMoKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYCwge1xuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICB9KS50aGVuKChyZXMpID0+IHtcbiAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBhZGRDYXJkKGNhcmREYXRhKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYCwge1xuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShjYXJkRGF0YSksXG4gICAgfSkudGhlbigocmVzKSA9PiB7XG4gICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZGVsZXRlQ2FyZChjYXJkSWQpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtjYXJkSWR9YCwge1xuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICB9KS50aGVuKChyZXMpID0+IHtcbiAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBnZXRVc2VySW5mbygpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWVgLCB7XG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pLnRoZW4oKHJlcykgPT4ge1xuICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHNldFVzZXJJbmZvKGZvcm1EYXRhKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZm9ybURhdGEpLFxuICAgIH0pLnRoZW4oKHJlcykgPT4ge1xuICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHNldFVzZXJBdmF0YXIoYXZhdGFyKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lL2F2YXRhcmAsIHtcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgYXZhdGFyIH0pLFxuICAgIH0pLnRoZW4oKHJlcykgPT4ge1xuICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcbiAgICB9KTtcbiAgfVxuXG4gIHVwZGF0ZUF2YXRhcihhdmF0YXJVUkwpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWUvYXZhdGFyYCwge1xuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyBhdmF0YXI6IGF2YXRhclVSTCB9KSxcbiAgICB9KS50aGVuKChyZXMpID0+IHtcbiAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBzZXRDYXJkTGlrZXMoY2FyZElkLCBpc0xpa2VkKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7Y2FyZElkfS9saWtlc2AsIHtcbiAgICAgIG1ldGhvZDogaXNMaWtlZCA/IFwiREVMRVRFXCIgOiBcIlBVVFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICB9KS50aGVuKChyZXMpID0+IHtcbiAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZvIHtcbiAgY29uc3RydWN0b3IoeyB1c2VyTmFtZSwgdXNlckFib3V0LCB1c2VyQXZhdGFyIH0pIHtcbiAgICB0aGlzLl91c2VyTmFtZUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHVzZXJOYW1lKTtcbiAgICB0aGlzLl91c2VyQWJvdXRFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih1c2VyQWJvdXQpO1xuICAgIHRoaXMuX2F2YXRhckVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHVzZXJBdmF0YXIpO1xuICB9XG5cbiAgZ2V0VXNlckluZm8oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5hbWU6IHRoaXMuX3VzZXJOYW1lRWxlbWVudC50ZXh0Q29udGVudCxcbiAgICAgIGFib3V0OiB0aGlzLl91c2VyQWJvdXRFbGVtZW50LnRleHRDb250ZW50LFxuICAgICAgYXZhdGFyOiB0aGlzLl9hdmF0YXJFbGVtZW50LnNyYyxcbiAgICB9O1xuICB9XG5cbiAgc2V0VXNlckluZm8oeyBuYW1lLCBhYm91dCwgYXZhdGFyIH0pIHtcbiAgICB0aGlzLl91c2VyTmFtZUVsZW1lbnQudGV4dENvbnRlbnQgPSBuYW1lO1xuICAgIHRoaXMuX3VzZXJBYm91dEVsZW1lbnQudGV4dENvbnRlbnQgPSBhYm91dDtcbiAgICB0aGlzLl9hdmF0YXJFbGVtZW50LnNyYyA9IGF2YXRhcjtcbiAgfVxufVxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XG4gICAgc3VwZXIoeyBwb3B1cFNlbGVjdG9yIH0pO1xuICAgIHRoaXMuX2ltYWdlID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2NhcmQtaW1hZ2VcIik7XG4gICAgdGhpcy5faW1hZ2VUZXh0ID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2ltYWdlLXRleHRcIik7XG4gIH1cblxuICBvcGVuKHsgbmFtZSwgbGluayB9KSB7XG4gICAgdGhpcy5faW1hZ2Uuc3JjID0gbGluaztcbiAgICB0aGlzLl9pbWFnZS5hbHQgPSBgUGhvdG8gb2YgJHtuYW1lfWA7XG4gICAgdGhpcy5faW1hZ2VUZXh0LnRleHRDb250ZW50ID0gbmFtZTtcblxuICAgIHN1cGVyLm9wZW4oKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbImNvbmZpZyIsImZvcm1TZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwiZWRpdFByb2ZpbGVGb3JtRWxlbWVudCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsInByb2ZpbGVFZGl0QnV0dG9uIiwicHJvZmlsZVRpdGxlSW5wdXQiLCJwcm9maWxlRGVzY3JpcHRpb25JbnB1dCIsImF2YXRhckZvcm0iLCJjaGFuZ2VBdmF0YXJJbWFnZUJ1dHRvbiIsInByb2ZpbGVBZGRCdXR0b24iLCJuZXdDYXJkRWRpdEZvcm0iLCJyZW1vdmVDYXJkRm9ybSIsIkNhcmQiLCJjb25zdHJ1Y3RvciIsIl9yZWYiLCJjYXJkU2VsZWN0b3IiLCJoYW5kbGVJbWFnZUNsaWNrIiwiaGFuZGxlQ2FyZERlbGV0ZSIsImhhbmRsZUxpa2VDbGljayIsIm5hbWUiLCJsaW5rIiwiX2lkIiwiaXNMaWtlZCIsInRoaXMiLCJpZCIsIl9uYW1lIiwiX2xpbmsiLCJfY2FyZFNlbGVjdG9yIiwiX2hhbmRsZUltYWdlQ2xpY2siLCJfaGFuZGxlQ2FyZERlbGV0ZSIsIl9oYW5kbGVMaWtlQ2xpY2siLCJjb25zb2xlIiwibG9nIiwiX2NhcmRFbGVtZW50IiwiY29udGVudCIsImNsb25lTm9kZSIsImRhdGFzZXQiLCJfY2FyZFRpdGxlRWwiLCJfY2FyZEltYWdlRWwiLCJfbGlrZUJ1dHRvbkVsIiwiX2RlbGV0ZUJ1dHRvbkVsIiwidGV4dENvbnRlbnQiLCJzcmMiLCJhbHQiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJfaGFuZGxlTGlrZUljb24iLCJhZGRFdmVudExpc3RlbmVyIiwiZGVsZXRlQ2FyZCIsInJlbW92ZSIsInVwZGF0ZUxpa2VzIiwiY2xhc3NMaXN0IiwiYWRkIiwiZ2V0VmlldyIsIkZvcm1WYWxpZGF0b3IiLCJmb3JtRWxlbWVudCIsIl9mb3JtRWxlbWVudCIsIl9pbnB1dFNlbGVjdG9yIiwiX3N1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiX2luYWN0aXZlQnV0dG9uQ2xhc3MiLCJfaW5wdXRFcnJvckNsYXNzIiwiX2Vycm9yQ2xhc3MiLCJfaW5wdXRFbGVtZW50cyIsIkFycmF5IiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJfc3VibWl0QnV0dG9uIiwiX3Nob3dJbnB1dEVycm9yIiwiaW5wdXRFbGVtZW50IiwiZXJyb3JNZXNzYWdlRWwiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsIl9oaWRlSW5wdXRFcnJvciIsIl9jaGVja0lucHV0VmFsaWRpdHkiLCJ2YWxpZGl0eSIsInZhbGlkIiwiX2hhc0ludmFsaWRJbnB1dCIsInNvbWUiLCJfdG9nZ2xlQnV0dG9uU3RhdGUiLCJkaXNhYmxlZCIsImZvckVhY2giLCJlbmFibGVWYWxpZGF0aW9uIiwicmVzZXRWYWxpZGF0aW9uIiwicmVzZXQiLCJTZWN0aW9uIiwiY29udGFpbmVyU2VsZWN0b3IiLCJpdGVtcyIsInJlbmRlcmVyIiwiX2l0ZW1zIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsInJlbmRlckl0ZW1zIiwiaXRlbSIsImFkZEl0ZW0iLCJlbGVtZW50IiwicHJlcGVuZCIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsIl9wb3B1cEVsZW1lbnQiLCJfY2xvc2VCdXR0b24iLCJfaGFuZGxlRXNjQ2xvc2UiLCJiaW5kIiwib3BlbiIsImNsb3NlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImV2dCIsImtleSIsInNldEV2ZW50TGlzdGVuZXJzIiwidGFyZ2V0IiwiY29udGFpbnMiLCJQb3B1cFdpdGhGb3JtIiwiaGFuZGxlRm9ybVN1Ym1pdCIsInN1cGVyIiwiX21vZGFsRm9ybSIsIl9zdWJtaXRCdXR0b25UZXh0IiwiX2hhbmRsZUZvcm1TdWJtaXQiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJpbnB1dFZhbHVlcyIsImlucHV0IiwidmFsdWUiLCJwcmV2ZW50RGVmYXVsdCIsInNldFN1Ym1pdEFjdGlvbiIsInJlbmRlckxvYWRpbmciLCJpc0xvYWRpbmciLCJtZXNzYWdlIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwiYWRkQ2FyZFZhbGlkYXRvciIsImF2YXRhckZvcm1WYWxpZGF0b3IiLCJhcGkiLCJiYXNlVXJsIiwiaGVhZGVycyIsIl9iYXNlVXJsIiwiX2hlYWRlcnMiLCJnZXRJbml0aWFsQ2FyZHMiLCJmZXRjaCIsInRoZW4iLCJyZXMiLCJvayIsImpzb24iLCJhZGRDYXJkIiwiY2FyZERhdGEiLCJtZXRob2QiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImNhcmRJZCIsImdldFVzZXJJbmZvIiwic2V0VXNlckluZm8iLCJmb3JtRGF0YSIsInNldFVzZXJBdmF0YXIiLCJhdmF0YXIiLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzIiwidXBkYXRlQXZhdGFyIiwiYXZhdGFyVVJMIiwic2V0Q2FyZExpa2VzIiwiYXV0aG9yaXphdGlvbiIsImNhcmRTZWN0aW9uIiwiY2FyZHMiLCJjYXJkRWxlbWVudCIsImdldENhcmRFbGVtZW50IiwidXNlckluZm8iLCJ1c2VyTmFtZSIsInVzZXJBYm91dCIsInVzZXJBdmF0YXIiLCJfdXNlck5hbWVFbGVtZW50IiwiX3VzZXJBYm91dEVsZW1lbnQiLCJfYXZhdGFyRWxlbWVudCIsImFib3V0IiwiX3JlZjIiLCJ1c2VyRGF0YSIsInByb2ZpbGVFZGl0UG9wdXAiLCJhZGRDYXJkUG9wdXAiLCJkZWxldGVDYXJkTW9kYWwiLCJjYXJkIiwiYXZhdGFyTW9kYWxQb3B1cCIsImF2YXRhclVybCIsImNhdGNoIiwiZXJyIiwiaW1hZ2VQb3B1cCIsIl9pbWFnZSIsIl9pbWFnZVRleHQiLCJuZXdDYXJkRGF0YSIsImN1cnJlbnRVc2VySW5mbyJdLCJzb3VyY2VSb290IjoiIn0=